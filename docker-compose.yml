version: '3.9'

services:
  api:
    build:
      dockerfile: ./docker/django/Dockerfile
      context: .
    command: /start
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - ec_media_data:/app/media
    depends_on:
      - broker
      - result_backend
      - cache
    env_file:
      - .env
    restart: always
    networks:
      - ecommerce_network
      - ecommerce_nginx

  celery:
    build:
      dockerfile: ./docker/django/Dockerfile
      context: .
    command: /start-celeryworker
    env_file:
      - .env
    depends_on:
      - pgdb
      - broker
      - result_backend
      - cache
      - api
    networks:
      - ecommerce_network
    volumes:
      - .:/app

  flower:
    build:
      dockerfile: ./docker/django/Dockerfile
      context: .
    command: /start-flower
    volumes:
      - .:/app
    env_file:
      - .env
    ports:
      - "5555:5555"
    depends_on:
      - celery
    networks:
      - ecommerce_network


  pgdb:
    image: postgres:13.4-alpine
    env_file:
      - .env
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - ecommerce_network

  result_backend:
    image: redis:6.2-alpine
    ports:
      - "6379:6379"
    command: ["redis-server", "--save", "20 1", "--loglevel", "warning", "--requirepass", "${REDIS_RESULT_BACKEND_PASSWORD}", "--databases", "1"]
    volumes:
      - ec_result_backend_volume:/data
    networks:
      - ecommerce_network

  cache:
    image: redis:6.2-alpine
    ports:
      - "6380:6380"
    command: ["redis-server", "--requirepass", "${REDIS_CACHE_PASSWORD}", "--port", "6380", "--databases", "2"]
    volumes:
      - ec_cache_volume:/data
    networks:
      - ecommerce_network

  broker:
    image: rabbitmq:3.9-management-alpine
    env_file:
      - .env
    networks:
      - ecommerce_network
    ports:
      - "5672:5672"
      - "15672:15672"

  web:
    build:
      dockerfile: ./docker/react/Dockerfile
      context: .
    depends_on:
      - api
    ports:
      - "80:80"
    volumes:
      - ec_media_data:/app/media
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - ecommerce_nginx

volumes:
  ec_result_backend_volume:
  ec_media_data:
  ec_cache_volume:
  db_data:

networks:
  ecommerce_network:
  ecommerce_nginx:
